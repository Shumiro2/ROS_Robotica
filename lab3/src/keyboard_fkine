#!/usr/bin/env python
import rospy
from std_msgs.msg import String
from sensor_msgs.msg import JointState
from key_publisher import *
from markers import *
from lab3functions import *
global press_key
press_key = "0"
# Joint names
jnames = ['shoulder_pan_joint', 'shoulder_lift_joint',
'elbow_joint','wrist_1_joint','wrist_2_joint', 'wrist_3_joint']
# Joint Configuration
q = [0.0, 0, 0, 0, 0, 0.0]
def callback(msg):
    global press_key
    press_key = msg.data
rospy.init_node("keyboard_fkine")
if __name__ == '__main__':
    pub = rospy.Publisher('joint_states', JointState, queue_size=1000)
    bmarker = BallMarker(color['GREEN'])
    rate = rospy.Rate(100)
    rospy.Subscriber("/keys", String, callback)
    jstate = JointState()
    jstate.name = jnames
    jstate.header.stamp = rospy.Time.now()
    jstate.position = q
    while not rospy.is_shutdown():
        if press_key== "q" :
            q[0] = q[0]+0.01;
        elif press_key =="w":
            q[1] = q[1]+0.01;
        elif press_key =="e":
            q[2] = q[2]+0.01;
        elif press_key =="r":
            q[3] = q[3]+0.01;
        elif press_key =="t":
            q[4] = q[4]+0.01;
        elif press_key =="y":
            q[5] = q[5]+0.01;
        elif press_key== "a" :
            q[0] = q[0]-0.01;
        elif press_key =="s":
            q[1] = q[1]-0.01;
        elif press_key =="d":
            q[2] = q[2]-0.01;
        elif press_key =="f":
            q[3] = q[3]-0.01;
        elif press_key =="g":
            q[4] = q[4]-0.01;
        elif press_key =="h":
            q[5] = q[5]-0.01;
        T = fkine_ur5(q)
        print( np.round(T, 3) )
        bmarker.position(T)
        jstate = JointState()
        jstate.name = jnames
        jstate.header.stamp = rospy.Time.now()
        jstate.position = q
        pub.publish(jstate)
        bmarker.publish()
        rate.sleep()